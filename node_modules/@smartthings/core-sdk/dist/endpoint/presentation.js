"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const endpoint_1 = require("../endpoint");
const endpoint_client_1 = __importDefault(require("../endpoint-client"));
class PresentationEndpoint extends endpoint_1.Endpoint {
    constructor(config) {
        super(new endpoint_client_1.default('presentation', config));
    }
    /**
     * Get or generate a device configuration based on profile.
     *
     * @param extraParams deprecated.
     */
    generate(profileId, extraParams) {
        return this.client.get(`types/${profileId}/deviceconfig`, extraParams);
    }
    get(vid) {
        return this.client.get('deviceconfig', { vid });
    }
    /**
     * Make an idempotent call to either create or update a device configuration
     * based on the structure of the provided payload.
     */
    create(deviceConfig) {
        return this.client.post('deviceconfig', deviceConfig);
    }
    /**
     * Get a device presentation. If mnmn is omitted the default SmartThingsCommunity mnmn is used.
     * @param vid The id returned from the device config create operation
     * @param mnmn The manufacturer name, e.g. SmartThingsCommunity
     */
    getPresentation(vid, mnmn) {
        if (mnmn) {
            return this.client.get('', { vid, mnmn });
        }
        else {
            return this.client.get('', { vid });
        }
    }
}
exports.PresentationEndpoint = PresentationEndpoint;
